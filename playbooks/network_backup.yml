---
- name: retrieve network configurations
  hosts: network
  gather_facts: no

  tasks:
    - name: backup configuration
      include_role:
        name: "../roles/backup"
      when: ansible_network_os is defined

    - name: create time stamp for play
      set_fact:
        datetime: "{{ lookup('pipe','date +%Y-%m-%d-%H-%M') }}"
      delegate_to: backup-server
      delegate_facts: true
      run_once: true

    - name: save configuration to backup server
      copy:
        src: "{{ config_output.backup_path }}"
        dest: "/backup/{{hostvars['backup-server'].datetime}}/"
      when: config_output is defined
      become: yes
      delegate_to: backup-server

    - name: find backups
      find:
        paths: /backup
        file_type: directory
      register: backups
      run_once: true
      become: yes
      delegate_to: backup-server
      delegate_facts: true

    - name: create restore job template
      ansible.controller.job_template:
        name: "Network Automation - Restore"
        job_type: "run"
        inventory: "{{ restore_inventory|default('Network Inventory') }}"
        project: "{{ restore_project|default('Network Toolkit') }}"
        playbook: "{{ restores_playbook|default('playbooks/network_restore.yml') }}"
        credential: "{{ restore_credential|default('Network Credential') }}"
        survey_enabled: true
        survey_spec: "{{ lookup('template', '{{ playbook_dir }}/../network_setup/templates/backup.j2') }}"
        validate_certs: no
      run_once: true

    # - name: create restore job template
    #   ansible.controller.job_template:
    #     name: "Network Automation - Restore"
    #     job_type: "run"
    #     inventory: "{{ restore_inventory|default('Workshop Inventory') }}"
    #     project: "{{ restore_project|default('Workshop Project') }}"
    #     playbook: "{{ restores_playbook|default('network_restore.yml') }}"
    #     credential: "{{ restore_credential|default('Workshop Credential') }}"
    #     survey_enabled: true
    #     survey_spec: "{{ lookup('template', '{{ playbook_dir }}/../network_setup/templates/backup.j2') }}"
    #     validate_certs: no
    #   run_once: true
